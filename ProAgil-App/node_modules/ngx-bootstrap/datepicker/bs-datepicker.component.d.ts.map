{"version":3,"file":"bs-datepicker.component.d.ts","sources":["bs-datepicker.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef, AfterViewInit } from '@angular/core';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { Observable, Subscription, Subject, BehaviorSubject } from 'rxjs';\r\nimport { BsDatepickerConfig } from './bs-datepicker.config';\r\nimport { BsDatepickerViewMode, DatepickerDateCustomClasses, DatepickerDateTooltipText } from './models';\r\nexport declare class BsDatepickerDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    _config: BsDatepickerConfig;\r\n    private _elementRef;\r\n    private _renderer;\r\n    /**\r\n     * Placement of a datepicker. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n     */\r\n    placement: 'top' | 'bottom' | 'left' | 'right';\r\n    /**\r\n     * Specifies events that should trigger. Supports a space separated list of\r\n     * event names.\r\n     */\r\n    triggers: string;\r\n    /**\r\n     * Close datepicker on outside click\r\n     */\r\n    outsideClick: boolean;\r\n    /**\r\n     * A selector specifying the element the datepicker should be appended to.\r\n     */\r\n    container: string;\r\n    outsideEsc: boolean;\r\n    /**\r\n     * Returns whether or not the datepicker is currently being shown\r\n     */\r\n    get isOpen(): boolean;\r\n    set isOpen(value: boolean);\r\n    /**\r\n     * Emits an event when the datepicker is shown\r\n     */\r\n    onShown: EventEmitter<any>;\r\n    /**\r\n     * Emits an event when the datepicker is hidden\r\n     */\r\n    onHidden: EventEmitter<any>;\r\n    _bsValue: Date;\r\n    isOpen$: BehaviorSubject<boolean>;\r\n    isDestroy$: Subject<void>;\r\n    /**\r\n     * Initial value of datepicker\r\n     */\r\n    set bsValue(value: Date);\r\n    /**\r\n     * Config object for datepicker\r\n     */\r\n    set bsConfig(bsConfig: Partial<BsDatepickerConfig>);\r\n    get bsConfig(): Partial<BsDatepickerConfig>;\r\n    /**\r\n     * Indicates whether datepicker's content is enabled or not\r\n     */\r\n    isDisabled: boolean;\r\n    /**\r\n     * Minimum date which is available for selection\r\n     */\r\n    minDate: Date;\r\n    /**\r\n     * Maximum date which is available for selection\r\n     */\r\n    maxDate: Date;\r\n    /**\r\n     * Minimum view mode : day, month, or year\r\n     */\r\n    minMode: BsDatepickerViewMode;\r\n    /**\r\n     * Disable Certain days in the week\r\n     */\r\n    daysDisabled: number[];\r\n    /**\r\n     * Disable specific dates\r\n     */\r\n    datesDisabled: Date[];\r\n    /**\r\n     * Enable specific dates\r\n     */\r\n    datesEnabled: Date[];\r\n    /**\r\n     * Date custom classes\r\n     */\r\n    dateCustomClasses: DatepickerDateCustomClasses[];\r\n    /**\r\n     * Date tooltip text\r\n     */\r\n    dateTooltipTexts: DatepickerDateTooltipText[];\r\n    /**\r\n     * Emits when datepicker value has been changed\r\n     */\r\n    bsValueChange: EventEmitter<Date>;\r\n    get dateInputFormat$(): Observable<string>;\r\n    protected _subs: Subscription[];\r\n    private _datepicker;\r\n    private _datepickerRef;\r\n    private _bsConfig;\r\n    private readonly _dateInputFormat$;\r\n    constructor(_config: BsDatepickerConfig, _elementRef: ElementRef, _renderer: Renderer2, _viewContainerRef: ViewContainerRef, cis: ComponentLoaderFactory);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * Opens an element’s datepicker. This is considered a “manual” triggering of\r\n     * the datepicker.\r\n     */\r\n    show(): void;\r\n    /**\r\n     * Closes an element’s datepicker. This is considered a “manual” triggering of\r\n     * the datepicker.\r\n     */\r\n    hide(): void;\r\n    /**\r\n     * Toggles an element’s datepicker. This is considered a “manual” triggering\r\n     * of the datepicker.\r\n     */\r\n    toggle(): void;\r\n    /**\r\n     * Set config for datepicker\r\n     */\r\n    setConfig(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}