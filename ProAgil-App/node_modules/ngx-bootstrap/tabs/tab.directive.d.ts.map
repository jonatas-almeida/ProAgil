{"version":3,"file":"tab.directive.d.ts","sources":["tab.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef, OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TabsetComponent } from './tabset.component';\r\nexport declare class TabDirective implements OnInit, OnDestroy {\r\n    elementRef: ElementRef;\r\n    renderer: Renderer2;\r\n    /** tab header text */\r\n    heading: string;\r\n    /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\r\n    id: string;\r\n    /** if true tab can not be activated */\r\n    disabled: boolean;\r\n    /** if true tab can be removable, additional button will appear */\r\n    removable: boolean;\r\n    /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\r\n    get customClass(): string;\r\n    set customClass(customClass: string);\r\n    /** tab active state toggle */\r\n    get active(): boolean;\r\n    set active(active: boolean);\r\n    /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\r\n    selectTab: EventEmitter<TabDirective>;\r\n    /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\r\n    deselect: EventEmitter<TabDirective>;\r\n    /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\r\n    removed: EventEmitter<TabDirective>;\r\n    addClass: boolean;\r\n    role: string;\r\n    get ariaLabelledby(): string;\r\n    headingRef: TemplateRef<any>;\r\n    tabset: TabsetComponent;\r\n    protected _active: boolean;\r\n    protected _customClass: string;\r\n    constructor(tabset: TabsetComponent, elementRef: ElementRef, renderer: Renderer2);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}